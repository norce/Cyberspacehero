var map;

// svg path for target icon
var targetSVG = "M9,0C4.029,0,0,4.029,0,9s4.029,9,9,9s9-4.029,9-9S13.971,0,9,0z M9,15.93 c-3.83,0-6.93-3.1-6.93-6.93S5.17,2.07,9,2.07s6.93,3.1,6.93,6.93S12.83,15.93,9,15.93 M12.5,9c0,1.933-1.567,3.5-3.5,3.5S5.5,10.933,5.5,9S7.067,5.5,9,5.5 S12.5,7.067,12.5,9z";
// svg path for plane icon
var planeSVG = "m2,106h28l24,30h72l-44,-133h35l80,132h98c21,0 21,34 0,34l-98,0 -80,134h-35l43,-133h-71l-24,30h-28l15,-47";
// svg path for triple bar icon
var tripleBarSVG = 'M21.25,8.375V28h6.5V8.375H21.25zM12.25,28h6.5V4.125h-6.5V28zM3.25,28h6.5V12.625h-6.5V28z';
// svg path for arrow icon
var trackArrowSVG = "M-576-32l32-16l-8,16l8,16L-576-32z";
var doubleArrowSVG = "m 91.860396,593.62783 c -5.09105,0 -10.15073,2.11819 -13.75,5.71875 l -55,55 c -3.59127,3.59815 -5.6875,8.63504 -5.6875,13.71875 0,5.08369 2.09623,10.15184 5.6875,13.75 L 137.6729,796.37783 23.110396,910.94033 c -3.66423,3.66678 -5.76442,8.84801 -5.6875,14.03125 0.0784,4.9853 2.16308,9.91076 5.6875,13.4375 l 55,55 c 3.59927,3.6006 8.65895,5.6875 13.75,5.6875 5.09105,0 10.150734,-2.0869 13.750004,-5.6875 L 288.89165,810.12783 c 3.60056,-3.59928 5.6875,-8.65895 5.6875,-13.75 0,-5.09105 -2.08694,-10.15073 -5.6875,-13.75 L 105.6104,599.34658 c -3.59927,-3.60056 -8.658954,-5.71875 -13.750004,-5.71875 z m 200.000004,0 c -5.09105,0 -10.15073,2.11819 -13.75,5.71875 l -55,55 c -3.59127,3.59815 -5.6875,8.63504 -5.6875,13.71875 0,5.08369 2.09623,10.15184 5.6875,13.75 l 114.5625,114.5625 -114.5625,114.5625 c -3.66423,3.66678 -5.76442,8.84801 -5.6875,14.03125 0.0784,4.9853 2.16308,9.91076 5.6875,13.4375 l 55,55 c 3.59927,3.6006 8.65895,5.6875 13.75,5.6875 5.09105,0 10.15073,-2.0869 13.75,-5.6875 L 488.89165,810.12783 c 3.60056,-3.59928 5.6875,-8.65895 5.6875,-13.75 0,-5.09105 -2.08694,-10.15073 -5.6875,-13.75 L 305.6104,599.34658 c -3.59927,-3.60056 -8.65895,-5.71875 -13.75,-5.71875 z"
var luxuryArrowSVG = "M31.697,15.287  c-0.011-0.011-6.947-6.993-6.947-6.993c-0.203-0.203-0.47-0.298-0.735-0.291c-0.008,0-0.015-0.005-0.023-0.005h-23  c-0.88,0-1.32,1.109-0.705,1.727l6.242,6.295l-6.169,6.222C-0.305,22.859-0.009,24,1.203,23.998h22.78  c0.278,0.018,0.561-0.07,0.774-0.284l6.94-6.999C32.09,16.321,32.09,15.681,31.697,15.287z M23.626,21.991L3.439,21.997l5.21-5.254  c0.199-0.2,0.295-0.462,0.293-0.724c0.003-0.262-0.094-0.524-0.293-0.724L3.396,9.998h20.204l5.959,6.01L23.626,21.991z"
var arrowSVG = "m 96.00877,871.36623 c 2.6e-4,2.61792 1.07807,5.21962 2.92923,7.07077 1.85115,1.85116 4.45285,2.92897 7.07077,2.92923 l 140,0 0,65 c 0.008,3.92171 2.55252,7.7213 6.17608,9.22116 3.62357,1.49987 8.10933,0.61039 10.88642,-2.15866 l 150,-150 c 1.84587,-1.85072 2.91996,-4.44861 2.91996,-7.0625 0,-2.61389 -1.07409,-5.21178 -2.91996,-7.0625 l -150,-150 c -2.77709,-2.76905 -7.26285,-3.65853 -10.88642,-2.15866 -3.62356,1.49986 -6.16843,5.29945 -6.17608,9.22116 l 0,65 -140,0 c -2.61792,2.6e-4 -5.21962,1.07807 -7.07077,2.92923 -1.85116,1.85115 -2.92897,4.45285 -2.92923,7.07077 z"
var arrowDoubleSVG = "M160,344 L154,339 L154,339.833333 L159,344 L154,348.166667 L154,349 L160,344 L160,344 Z M158,344 L152,339 L152,342.081559 C148.460721,342.401309 145.692963,343.767593 144,348 C146.478653,345.934456 148.957306,345.234183 152,345.617183 L152,349 L158,344 L158,344 Z M158,344"


AmCharts.ready(function () {
    map = new AmCharts.AmMap();

    map.titles = [
        {
            alpha: 0,
            bold: true,
            color: 'hsl(180, 100%, 50%)',
//            id: 1,
            size: 60,
//            tabIndex: 2,
            text: '隐藏的主标题'
        },
        {
            alpha: 0.8,
            bold: true,
            color: 'hsl(30, 100%, 0%)',
//            id: 1,
            size: 40,
//            tabIndex: 3,
            text: '攻击者IP地址分布态势图'
        }
    ];

    map.projection = 'winke13';

    map.balloon.borderAlpha = 0;
    map.balloon.color = 'hsl(0, 100%, 100%)';
    map.balloon.fillAlpha = 1;
    map.balloon.fillColor = 'hsl(0, 100%, 40%)';
//    map.balloon.fontSize = 20;
    map.dragMap = true;
    map.fontColor = 'hsl(0, 100%, 100%)';
    map.fontFamily = 'Microsoft Yahei';
    map.fontSize = 24;
    map.mouseWheelZoomEnabled = true;
    // this line enables pinch-zooming and dragging on touch devices
    map.panEventsEnabled = true;
    map.pathToImages = '/images/ammap/';
    map.showAreasInList = false;
    map.showImagesInList = false;
    map.zoomControl.panControlEnabled = true;
    map.zoomControl.zoomControlEnabled = true;

    var dataProvider = {
        mapVar: AmCharts.maps.worldLow,
//        mapVar: AmCharts.maps.worldHigh,
//        mapVar: AmCharts.maps.chinaHigh,

        descriptionWindowHeight: 100,
        descriptionWindowWidth: 500,
        descriptionWindowX: 10,
        descriptionWindowY: 10,

        areas: [],
//        getAreasFromMap: true,

        images: [],
        lines: []
    };

    // Areas of each countries
    <% COUNTRIES.each_key do |code| %>
        <% next if code == 'CN'  %>
        <% area_id, sub_area_id = $1.to_i, $2.to_i %>
        dataProvider.areas.push({
            id: '<%= code %>',
            balloonText: '<img src="/images/flags_iso/128/<%= code %>.png"> <br> <%= GEO_DICTIONARY[code] %>',
            color: 'hsla(<%= rand(360) %>, <%= 100 - rand(30) %>%, 50%, .5)',
            description: '国家：<%= GEO_DICTIONARY[code] %><br>' +
                         '首都：<%= CAPITALS[code][:title] %><br>' +
                         '代码：<%= code %><br><hr>' +
                         '国旗：<img src="/images/flags_iso/128/<%= code %>.png"><br><hr>',
            title: '<img src="/images/flags_iso/48/<%= code %>.png"> <br> <%= GEO_DICTIONARY[code] %>',
            outlineAlpha: 1,
            outlineColor: 'hsla(0, 100%, 100%, .7)',
            outlineThickness: 1
        });
    <% end %>

    // Areas of China, with URL links to '/map/china'
    dataProvider.areas.push({
        id: 'CN',
        balloonText: '<img src="/images/flags_iso/128/CN.png"> <br> 中国',
        color: 'hsla(0, 100%, 50%, .5)',
        description: '国家：中国<br>' +
                     '首都：北京<br>' +
                     '代码：CN<br><hr>' +
                     '国旗：<img src="/images/flags_iso/128/CN.png"><br><hr>' +
                     // TODO: add action to drill down to china map
                     '前往：<a href="/map/china" target="_blank">中国地图</a>',
        title: '<img src="/images/flags_iso/48/CN.png"> <br> 中国',
        outlineAlpha: 1,
        outlineColor: 'hsla(0, 100%, 100%, .7)',
        outlineThickness: 1
    });

    map.areasSettings = {
//        adjustOutlineThickness: false,
//        alpha: 1,
        autoZoom: true,
        balloonText: '<img src="/images/flags_iso/128/CN.png"> <br> [[title]]',
//        bringForwardOnHover: true,
//        color: '',
//        colorSolid: '',
//        descriptionWindowBottom: 500,
        descriptionWindowHeight: 2000,
        descriptionWindowLeft: 120,
//        descriptionWindowRight: 500,
        descriptionWindowTop: 100,
        descriptionWindowWidth: 1400,
        outlineAlpha: 0.5,
        outlineColor: 'hsla(0, 100%, 100%, .7)',
        outlineThickness: 3,
        rollOverColor: 'hsl(45, 100%, 40%)',
        rollOverOutlineAlpha: 0.5,
        rollOverOutlineColor: 'hsl(0, 100%, 50%)',
        rollOverOutlineThickness: 6,
        selectable: true,
        selectedColor: 'hsl(180, 100%, 40%)',
        selectedOutlineColor: 'hsl(0, 0%, 0%)',
        selectedOutlineThickness: 6,
//        tabIndex: 1,
//        unlistedAreasAlpha: 1,
        unlistedAreasColor: 'hsl(120, 50%, 30%)',    // '#8dd9ef'
        unlistedAreasOutlineAlpha: 0.5,
//        unlistedAreasOutlineColor: ''
    };


    // Images of each capitals
    <% CAPITALS.each_pair do |code, capital| %>
        dataProvider.images.push({
            // svgPath: targetSVG,
            centered: true,
            height: 5,
            label: '<%= capital[:title] %>',
            labelColor: 'hsl(0, 100%, 100%)',
            labelShiftX: -5,
            labelShiftY: -5,
            latitude: <%= capital[:lat] %>,
            longitude: <%= capital[:long] %>,
            selectable: true,
            showInList: true,
            title: '<img src="/images/flags_iso/128/<%= code %>.png"> <br> <%= GEO_DICTIONARY[code] %> - <%= capital[:title] %>',
            type: 'circle',
            width: 5
        });
    <% end %>

    // Images of each province capitals
    <% PROVINCE_CAPITALS.each_pair do |name, capital| %>
        dataProvider.images.push({
            //  svgPath: targetSVG,
            centered: true,
            description: '<%=raw @areas[name][:description] if @areas[name] %>',
            height: 10,
            label: '<%= capital[:title] %>',
            labelColor: 'hsl(0, 100%, 100%)',
            labelShiftX: -2,
            labelShiftY: -8,
            latitude: <%= capital[:lat] %>,
            longitude: <%= capital[:long] %>,
            selectable: true,
            showInList: true,
            title: '<img src="/images/flags_iso/128/CN.png"> <br> <%= PROVINCE_DICTIONARY[name] %> - <%= capital[:title] %>',
            type: 'circle',
            width: 10
    });
    <% end %>

    map.imagesSettings = {
        color: "#FFFFFF", // "#585869",
        //  descriptionWindowBottom: 500,
        descriptionWindowHeight: 2000,
        descriptionWindowLeft: 120,
        //  descriptionWindowRight: 500,
        descriptionWindowTop: 100,
        descriptionWindowWidth: 1400,
        rollOverColor: "#FF0000", // "#585869",
        selectedColor: "#FFFF00", // "#585869",
        pauseDuration: 0.2,
        animationDuration: 2.5,
        adjustAnimationSpeed: true
    };


    // Lines of each routes
    <% CAPITALS.each_pair do |code, capital| %>
        <% if rand(10) > 9 %>
            dataProvider.images.push({
                svgPath: arrowDoubleSVG,    // planeSVG, tripleBarSVG, targetSVG, trackArrowSVG, doubleArrowSVG, luxuryArrowSVG, arrowSVG, arrowDoubleSVG
                rotate: 45,
                positionOnLine: 0,
                color: 'hsla(<%= rand(12) * 30 %>, 100%, <%= rand(6) * 20 %>%, 1)', // "#585869",
                alpha: 1,
                animateAlongLine: true,
                lineId: "line_<%= code %>",
                flipDirection: false,
                loop: true,
                scale: 1,    // 0.05, 0.5, 0.9, 0.9, 0.03, 0.5, 0.04, 1
                positionScale: 1.8
            });

            dataProvider.lines.push({
                id: "line_<%= code %>",
                arc: -0.85,
                alpha: 0.3,
                latitudes: [<%= capital[:lat] %>, <%= PROVINCE_CAPITALS['北京'][:lat] %>],
                longitudes: [<%= capital[:long] %>, <%= PROVINCE_CAPITALS['北京'][:long] %>]
            });
        <% end %>
    <% end %>


    // Lines to XinYang, with animate icon go along the line route
    <% @areas.each_pair do |code, area| %>
    <% prov = PROVINCES[code] %>
    <% capital = PROVINCE_CAPITALS[code] %>
        dataProvider.lines.push({
            id: "line_<%= prov[:id] %>",
            arc: -0.5,
            alpha: 0.3,
            thickness: <%= area[:thickness] %>,
            latitudes: [<%= capital[:lat] %>, <%= CITIES['信阳'][:lat] %>],
            longitudes: [<%= capital[:long] %>, <%= CITIES['信阳'][:long] %>]
        });

        dataProvider.images.push({
            svgPath: arrowDoubleSVG,    // planeSVG, tripleBarSVG, targetSVG, trackArrowSVG, doubleArrowSVG, luxuryArrowSVG, arrowSVG, arrowDoubleSVG
            rotate: 45,
            positionOnLine: 0,
            color: 'hsla(0, 100%, 100%, 1)',   // 'hsla(<%= rand(12) * 30 %>, 100%, <%= rand(6) * 20 %>%, 1)', // "#585869",
            alpha: 1,
            animateAlongLine: true,
            lineId: "line_<%= prov[:id] %>",
            flipDirection: false,
            loop: true,
            scale: 1,    // 0.05, 0.5, 0.9, 0.9, 0.03, 0.5, 0.04, 1
            positionScale: 1.8
        });
    <% end  %>

    map.linesSettings = {
        color: "#FFFFFF", // "#585869",
        alpha: 0.4
    };


    dataProvider.zoomLevel = 2; // 3.5;
    dataProvider.zoomLongitude = 55; // -55;
    dataProvider.zoomLatitude = 19; // 42;
    map.dataProvider = dataProvider;


    map.smallMap = new AmCharts.SmallMap();
    map.smallMap.size = 0.15;


    map.write("ammap_world");
});
