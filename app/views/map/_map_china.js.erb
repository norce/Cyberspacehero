var map;

// svg path for target icon
var targetSVG = "M9,0C4.029,0,0,4.029,0,9s4.029,9,9,9s9-4.029,9-9S13.971,0,9,0z M9,15.93 c-3.83,0-6.93-3.1-6.93-6.93S5.17,2.07,9,2.07s6.93,3.1,6.93,6.93S12.83,15.93,9,15.93 M12.5,9c0,1.933-1.567,3.5-3.5,3.5S5.5,10.933,5.5,9S7.067,5.5,9,5.5 S12.5,7.067,12.5,9z";
// svg path for plane icon
var planeSVG = "m2,106h28l24,30h72l-44,-133h35l80,132h98c21,0 21,34 0,34l-98,0 -80,134h-35l43,-133h-71l-24,30h-28l15,-47";
// svg path for triple bar icon
var tripleBarSVG = 'M21.25,8.375V28h6.5V8.375H21.25zM12.25,28h6.5V4.125h-6.5V28zM3.25,28h6.5V12.625h-6.5V28z';


AmCharts.ready(function () {
    map = new AmCharts.AmMap();

    map.titles = [
        {
            alpha: 0,
            bold: true,
            color: 'hsl(180, 100%, 50%)',
//            id: 1,
            size: 60,
//            tabIndex: 2,
            text: '隐藏的主标题'
        },
        {
            alpha: 0.8,
            bold: true,
            color: 'hsl(30, 100%, 50%)',
//            id: 1,
            size: 40,
//            tabIndex: 3,
            text: '攻击者IP地址分布态势图'
        }
    ];

    map.projection = 'winke13';

    map.balloon.borderAlpha = 0;
    map.balloon.color = 'hsl(0, 100%, 100%)';
    map.balloon.fillAlpha = 1;
    map.balloon.fillColor = 'hsl(0, 100%, 40%)';
//    map.balloon.fontSize = 20;
    map.dragMap = true;
    map.fontColor = 'hsl(0, 100%, 100%)';
    map.fontFamily = 'Microsoft Yahei';
    map.fontSize = 24;
    map.mouseWheelZoomEnabled = true;
    // this line enables pinch-zooming and dragging on touch devices
    map.panEventsEnabled = true;
    map.pathToImages = '/images/ammap/';
    map.showAreasInList = false;
    map.showImagesInList = false;
    map.zoomControl.panControlEnabled = true;
    map.zoomControl.zoomControlEnabled = true;

    var dataProvider = {
//        mapVar: AmCharts.maps.worldLow,
//        mapVar: AmCharts.maps.worldHigh,
        mapVar: AmCharts.maps.chinaHigh,

        descriptionWindowHeight: 100,
        descriptionWindowWidth: 500,
        descriptionWindowX: 10,
        descriptionWindowY: 10,

        areas: [],
//        getAreasFromMap: true,

        images: [],
        lines: []
    };

    // Areas of each countries
    <%# PROVINCES.each_pair do |name, prov| %>
    <% {}.each_pair do |name, prov| %>
    <% prov[:id].match(/CN-(\d)(\d)/) %>
    <% area_id, sub_area_id = $1.to_i, $2.to_i %>
    dataProvider.areas.push({
        id: '<%= prov[:id] %>',
        balloonText: '<img src="/images/flags_iso/128/CN.png"> <br> <%= prov[:title] %>',
        color: 'hsla(<%= (area_id - 1) * 40 + sub_area_id * 6 %>, <%= 100 - sub_area_id * 4 %>%, 50%, .5)',
        color: 'hsla(<%= rand(360) %>, <%= 100 - rand(30) %>%, 50%, .5)',
        description: '<img src="/images/flags_iso/48/CN.png"> description',
        description: '省份：<%= prov[:title] %><br>' +
        '省会：<%= PROVINCE_CAPITALS[name][:title] %><br>' +
        '代码：<%= prov[:id] %><br><hr>' +
        '国旗：<img src="/images/flags_iso/128/CN.png"><br><hr>' +
        '随机IP地址：<%= ip = (Array.new(4) {(rand(254) + 1).to_s }).join('.') %><br>' +
        'IP归属地：<%= location = IP_LOCATION_SEEKER.seek(ip) %> ' +
        '<img src="/images/flags_iso/48/<%= location_to_country_code(location) %>.png">',
        title: '<img src="/images/flags_iso/128/CN.png"> <br> <%= prov[:title] %>',
        outlineAlpha: 1,
        outlineColor: 'hsla(0, 100%, 100%, .7)',
        outlineThickness: 1
    });
    <% end %>

    <% @areas.each_pair do |code, area| %>
        <% prov = PROVINCES[code] %>
        dataProvider.areas.push({
            id: '<%= prov[:id] %>',
    //            balloonText: '[[title]]',
            color: 'hsla(0, <%= area[:saturation] %>%, <%= area[:saturation]/2+20 %>%, 1)',
            description: '<%=raw area[:description] %>',
            title: '<%= "#{prov[:title]}（#{area[:ips].length}）" %>'
        });
    <% end  %>

    map.areasSettings = {
//        adjustOutlineThickness: false,
//        alpha: 1,
        autoZoom: true,
        balloonText: '<img src="/images/flags_iso/128/CN.png"> <br> [[title]]',
//        bringForwardOnHover: true,
//        color: '',
//        colorSolid: '',
//        descriptionWindowBottom: 500,
        descriptionWindowHeight: 1800,
        descriptionWindowLeft: 1000,
        descriptionWindowRight: 1000,
//        descriptionWindowTop: 500,
        descriptionWindowWidth: 1840,
        outlineAlpha: 0.5,
        outlineColor: 'hsla(0, 100%, 100%, .7)',
        outlineThickness: 3,
        rollOverColor: 'hsl(45, 100%, 40%)',
        rollOverOutlineAlpha: 0.5,
        rollOverOutlineColor: 'hsl(0, 100%, 50%)',
        rollOverOutlineThickness: 6,
        selectable: true,
        selectedColor: 'hsl(180, 100%, 40%)',
        selectedOutlineColor: 'hsl(0, 0%, 0%)',
        selectedOutlineThickness: 6,
//        tabIndex: 1,
//        unlistedAreasAlpha: 1,
        unlistedAreasColor: 'hsl(120, 50%, 30%)',    // '#8dd9ef'
        unlistedAreasOutlineAlpha: 0.5,
//        unlistedAreasOutlineColor: ''
    };


    // Images of each capitals
    <% CAPITALS.each_pair do |code, capital| %>
    dataProvider.images.push({
        svgPath: targetSVG,
        centered: true,
        height: 15,
        label: '<%= capital[:title] %>',
        labelColor: 'hsl(0, 100%, 100%)',
        labelShiftX: 0,
        labelShiftY: -15,
        latitude: <%= capital[:lat] %>,
        longitude: <%= capital[:long] %>,
        selectable: true,
        showInList: true,
        title: '<img src="/images/flags_iso/128/<%= code %>.png"> <br> <%= GEO_DICTIONARY[code] %> - <%= capital[:title] %>',
//            type: 'circle',
        width: 15
    });
    <% end %>

    // Images of each province capitals
    <% PROVINCE_CAPITALS.each_pair do |name, capital| %>
    dataProvider.images.push({
//            svgPath: targetSVG,
        centered: true,
        height: 10,
        label: '<%= capital[:title] %>',
        labelColor: 'hsl(0, 100%, 100%)',
        labelShiftX: -2,
        labelShiftY: -8,
        latitude: <%= capital[:lat] %>,
        longitude: <%= capital[:long] %>,
        selectable: true,
        showInList: true,
        title: '<img src="/images/flags_iso/128/CN.png"> <br> <%= PROVINCE_DICTIONARY[name] %> - <%= capital[:title] %>',
        type: 'circle',
        width: 10
    });
    <% end %>

    // Images of Target
    dataProvider.images.push({
//        svgPath: targetSVG,
        centered: true,
        color: '#000000',
        height: 20,
        label: '<%= CITIES['信阳'][:title] %>',
        labelColor: 'hsl(0, 100%, 100%)',
        labelShiftX: -2,
        labelShiftY: -8,
        latitude: <%= CITIES['信阳'][:lat] %>,
        longitude: <%= CITIES['信阳'][:long] %>,
        selectable: true,
        showInList: true,
        title: '<img src="/images/flags_iso/128/CN.png"> <br> 河南省 - <%= CITIES['信阳'][:title] %>',
        type: 'circle',
        width: 20
    });

    map.imagesSettings = {
        color: "#FFFFFF", // "#585869",
        rollOverColor: "#FF0000", // "#585869",
        selectedColor: "#FFFF00", // "#585869",
        pauseDuration: 0.2,
        animationDuration: 2.5,
        adjustAnimationSpeed: true
    };


    // Lines of each routes
    <%# CAPITALS.each_pair do |code, capital| %>
    <% if rand(10) > 9 %>
    dataProvider.lines.push({
        id: "line_<%= code %>",
        arc: -0.85,
        alpha: 0.3,
        color: '#00AAAA',
        latitudes: [<%= capital[:lat] %>, <%= PROVINCE_CAPITALS['北京'][:lat] %>],
        longitudes: [<%= capital[:long] %>, <%= PROVINCE_CAPITALS['北京'][:long] %>]
    });
    <% end %>
    <%# end %>

    <%# PROVINCE_CAPITALS.each_pair do |name, capital| %>
    <% if rand(10) > 9 %>
    dataProvider.lines.push({
        id: "line_<%= PROVINCE_CAPITALS.keys.index(name) %>",
        arc: -0.5,
        alpha: 0.5,
        latitudes: [<%= capital[:lat] %>, <%= PROVINCE_CAPITALS['北京'][:lat] %>],
        longitudes: [<%= capital[:long] %>, <%= PROVINCE_CAPITALS['北京'][:long] %>]
    });
    <% end %>
    <%# end %>

    // Lines to XinYang
    <% @areas.each_pair do |code, area| %>
    <% prov = PROVINCES[code] %>
    <% capital = PROVINCE_CAPITALS[code] %>
    dataProvider.lines.push({
        id: "line_<%= prov[:id] %>",
        arc: -0.5,
        alpha: 0.3,
        thickness: <%= area[:thickness] %>,
        latitudes: [<%= capital[:lat] %>, <%= CITIES['信阳'][:lat] %>],
        longitudes: [<%= capital[:long] %>, <%= CITIES['信阳'][:long] %>]
    });
    <% end  %>

    map.linesSettings = {
        color: "#FFFFFF", // "#585869",
        alpha: 0.4
    };


//    dataProvider.zoomLevel = 0.4;
//    dataProvider.zoomLongitude = 150;
//    dataProvider.zoomLatitude = 9;
    map.dataProvider = dataProvider;


    map.smallMap = new AmCharts.SmallMap();
    map.smallMap.size = 0.15;
    map.smallMap.bottom = 15;

//    map.objectList = new AmCharts.ObjectList();
//    map.objectList.container = 'object_list'


    map.write("ammap_china");
});
